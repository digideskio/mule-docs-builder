[[ManagingApplicationDatawithObjectStores-ManagingApplicationDataStoragewithObjectStores]]
= Managing Application Data Storage with Object Stores

CloudHub includes application data storage for each CloudHub application
which are accessible through Mule's
link:/documentation/display/current/Mule+Object+Stores[ObjectStore]
functionality. This storage can be used to store anything, but two of
its main uses are:

* Storing synchronization state:  Your application may need to keep
track of the last record synchronized, so the next time it synchronizes
it can resume where it left off.
* OAuth tokens:  All our OAuth enabled connectors can store tokens
inside our ObjectStore with a few lines of configuration.

Your application can also store any other custom integration data as
well, within the limits outlined below.

[[ManagingApplicationDatawithObjectStores-StoringandRetrievingData]]
== Storing and Retrieving Data

The easiest way to work with application data inside from your Mule
flows is by using the
http://mulesoft.github.com/mule-module-objectstore/mule/modules.html[Object
Store module]. It provides functions to store, retrieve, list, and
remove data from the CloudHub ObjectStore.

To install this Module into Mule
Studio, link:/documentation/display/current/Installing+Extensions[follow
these instructions] and select the Object Store module for installation.

[[ManagingApplicationDatawithObjectStores-StoringOAuthdata]]
=== Storing OAuth data

Each connector contains instructions on how to use the ObjectStore
module to store and retrieve OAuth tokens. See the "Saving and Restoring
State" section in
the http://mulesoft.github.com/linkedin-connector/mule/linkedin-config.html#config[LinkedIn
connector configuration] documentation for an example.

[[ManagingApplicationDatawithObjectStores-ViewingApplicationData]]
== Viewing Application Data

To view application data, click on the Application Data tab when viewing
your application. You'll see a list of your keys and values listed. To
search your keys, simply type the key name in the search bar.

image:/documentation/download/attachments/118981854/image2014-10-25+0%3A14%3A12.png?version=1&modificationDate=1414221545884[image]

[[ManagingApplicationDatawithObjectStores-SemanticsandStorageLimits]]
== Semantics and Storage Limits

The CloudHub object store provides read-after-write consistency and the
last write will win in terms of updates. 

Additionally, it places these limits on your data:

1.  A maximum of 100,000 keys per application
2.  A 768 byte key size
3.  A 1 MB value size
4.  1 GB of data per application

[[ManagingApplicationDatawithObjectStores-AdvancedInformation]]
== Advanced Information

Internally, Mule has several different types of object stores. CloudHub
provides an implementation of the "user defined object store." This is
for runtime information about your application, such as those use cases
mentioned above. If you wish to access this object store directly, it
can be found internally in the Mule Registry under the
"_defaultUserObjectStore." The Object Store module and connectors will
use this store to store all their data by default.
